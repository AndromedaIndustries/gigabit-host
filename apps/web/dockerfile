#use the node base image provided by the official Docker Hub
FROM node:current-bullseye-slim AS builder

ENV PNPM_HOME="/pnpm"
ENV PATH="$PNPM_HOME:$PATH"
RUN corepack enable

# ADD required next.js files 
COPY . /app

# Set the working directory in the container
WORKDIR /app

# Install the production dependencies into a separate layer
FROM builder AS prod-deps
RUN --mount=type=cache,id=pnpm,target=/pnpm/store pnpm install --prod --frozen-lockfile

# Build the application in it's own layer
FROM builder AS build
RUN --mount=type=cache,id=pnpm,target=/pnpm/store pnpm install --frozen-lockfile
RUN pnpm run build

# Create the runtime image 
FROM alpine:latest AS runner

# Set the working directory in the container
WORKDIR /app

# Update nodejs if needed
RUN apk add --update nodejs

# Copy the next binary from the builder
COPY --from=prod-deps /app/node_modules /app/node_modules

# Copy the public folder from the builder
COPY --from=builder /app/public ./public

# Copy the built application from the builder
COPY --from=build /app/.next ./.next

# Serve the app
CMD ["/app/node_modules/.bin/next", "start"]
