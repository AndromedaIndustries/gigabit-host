generator client {
  provider = "prisma-client-js"
  output   = "../generated/client"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_SUPABASE_URL")
}

model Permission {
  id    String @id @default(ulid()) @db.VarChar(255)
  name  String @unique @db.VarChar(255)
  roles Role[] // Many-to-many relation with Role
}

model Role {
  id          String       @id @default(ulid()) @db.VarChar(255)
  name        String       @unique @db.VarChar(255)
  description String?      @db.Text
  created_at  DateTime     @default(now()) @db.Timestamp(6)
  updated_at  DateTime     @updatedAt @db.Timestamp(6)
  permissions Permission[]
  accounts    Account[]
}

model Account {
  id          String     @id @default(ulid()) @db.VarChar(255)
  user_id     String     @db.VarChar(255)
  name        String     @db.VarChar(255)
  description String?    @db.Text
  created_at  DateTime   @default(now()) @db.Timestamp(6)
  updated_at  DateTime   @updatedAt @db.Timestamp(6)
  roles       Role[]
  services    Services[]
}

model Sku {
  id          String  @id @default(ulid()) @db.VarChar(255)
  sku         String  @unique @db.VarChar(255)
  name        String  @db.VarChar(255)
  type        String  @db.VarChar(255)
  description String  @db.Text
  category    String  @db.VarChar(255)
  price       Float   @db.Real
  attributes  Json    @db.Json
  popular     Boolean @default(false)
  available   Boolean @default(false)
  quantity    Int     @default(0)
}

model Services {
  id              String   @id @default(ulid()) @db.VarChar(255)
  user_id         String   @db.VarChar(255)
  sku_id          String   @db.VarChar(255)
  subscription    String   @db.VarChar(255)
  subscription_id String   @db.VarChar(255)
  status          String   @db.VarChar(255)
  created_at      DateTime @default(now()) @db.Timestamp(6)
  updated_at      DateTime @updatedAt @db.Timestamp(6)
  accountId       String?  @db.VarChar(255)
  Account         Account? @relation(fields: [accountId], references: [id])
}
