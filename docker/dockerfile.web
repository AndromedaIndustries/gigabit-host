#use the node base image provided by the official Docker Hub
FROM node:22-alpine AS builder
WORKDIR /app

ENV PNPM_HOME="/pnpm"
ENV PATH="$PNPM_HOME:$PATH"
RUN corepack enable
RUN apk add openssl 

# bring in workspace config + root lockfile
COPY pnpm-workspace.yaml /app/pnpm-workspace.yaml 
COPY package.json /app/package.json 
COPY pnpm-lock.yaml /app/pnpm-lock.yaml 

# bring in turbo.json
COPY turbo.json /app/turbo.json

# bring in all workspaces
COPY packages /app/packages
COPY apps/web /app/apps/web

WORKDIR /app
RUN --mount=type=cache,id=pnpm,target=/pnpm/store pnpm install

# Build the database client
WORKDIR /app/packages/database
RUN pnpm run generate

# Build the application
WORKDIR /app/apps/web
RUN pnpm run build

# Create the runtime image 
FROM node:22-alpine AS runner

# Set the working directory in the container
WORKDIR /app/apps/web
RUN apk add openssl 

# Copy the database client from the builder
COPY --from=builder /app/packages/database /app/packages/database

# Copy the root node_modules from the builder
COPY --from=builder /app/node_modules /app/node_modules

# Copy the web node_modules from the builder
COPY --from=builder /app/apps/web/node_modules /app/apps/web/node_modules

# Copy the public folder from the builder
COPY --from=builder /app/apps/web/public /app/apps/web/public

# Copy the built application from the builder
COPY --from=builder /app/apps/web/.next /app/apps/web/.next

# Serve the app
CMD ["/app/apps/web/node_modules/.bin/next", "start"] 
